{"cells":[{"cell_type":"markdown","metadata":{"id":"LCD5LvdeuARz"},"source":["# Challenge 3\n","\n","In this challenge we will work on the `Orders` data set. In your work you will apply the thinking process and workflow we showed you in Challenge 2.\n","\n","You are serving as a Business Intelligence Analyst at the headquarter of an international fashion goods chain store. Your boss today asked you to do two things for her:\n","\n","**First, identify two groups of customers from the data set.** The first group is **VIP Customers** whose **aggregated expenses** at your global chain stores are **above the 95th percentile** (aka. 0.95 quantile). The second group is **Preferred Customers** whose **aggregated expenses** are **between the 75th and 95th percentile**.\n","\n","**Second, identify which country has the most of your VIP customers, and which country has the most of your VIP+Preferred Customers combined.**"]},{"cell_type":"markdown","metadata":{"id":"u_ZXLBYquAR1"},"source":["## Q1: How to identify VIP & Preferred Customers?\n","\n","We start by importing all the required libraries:"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"5izi72ELuAR1","executionInfo":{"status":"ok","timestamp":1721154504351,"user_tz":-120,"elapsed":3068,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"outputs":[],"source":["# üìö Basic Libraries\n","import pandas as pd\n","import numpy as np\n","import warnings\n","import os\n","import plotly.express as px\n","\n","# üìä Visualizations\n","import matplotlib.pyplot as plt\n","import matplotlib.cm as cm\n","import seaborn as sns\n","\n","# ü§ñ Machine Learning\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import roc_curve, confusion_matrix, ConfusionMatrixDisplay\n","from sklearn.metrics import classification_report\n","\n","# ‚öôÔ∏è Settings\n","pd.set_option('display.max_columns', None) # display all columns\n","warnings.filterwarnings('ignore') # ignore warnings\n","\n","# üîß Basic functions\n","def snake_columns(data):\n","    \"\"\"\n","    Standarize and returns snake_case columns\n","    \"\"\"\n","    data.columns = [column.lower().replace(' ', '_') for column in data.columns]"]},{"cell_type":"markdown","metadata":{"id":"sItQVIAguAR2"},"source":["Next, extract and import `Orders` dataset into a dataframe variable called `orders`. Print the head of `orders` to overview the data:"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cmf6FsVGuAR2","executionInfo":{"status":"ok","timestamp":1721154504351,"user_tz":-120,"elapsed":3,"user":{"displayName":"David Arques","userId":"16424418859302897863"}},"outputId":"1715a70e-fe93-4fdb-ae3e-cbe88c51582e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['.config', 'Orders.zip', 'sample_data']"]},"metadata":{},"execution_count":2}],"source":["# your code here\n","os.listdir()"]},{"cell_type":"code","source":["data = pd.read_csv('Orders.zip')"],"metadata":{"id":"w_4jE_yIugvI","executionInfo":{"status":"ok","timestamp":1721154506469,"user_tz":-120,"elapsed":2119,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df = data.copy()"],"metadata":{"id":"c38_T07lungh","executionInfo":{"status":"ok","timestamp":1721154506470,"user_tz":-120,"elapsed":8,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GFEuDQkUuqQp","executionInfo":{"status":"ok","timestamp":1721154506470,"user_tz":-120,"elapsed":7,"user":{"displayName":"David Arques","userId":"16424418859302897863"}},"outputId":"2444fe66-7d4a-446f-fc53-5e559f5b6204"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(397924, 14)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.head(4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"id":"0H0f11pXusCZ","executionInfo":{"status":"ok","timestamp":1721154506470,"user_tz":-120,"elapsed":6,"user":{"displayName":"David Arques","userId":"16424418859302897863"}},"outputId":"e99be284-a3ad-48bb-cbe8-91a29f144a78"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  InvoiceNo StockCode  year  month  day  hour  \\\n","0           0     536365    85123A  2010     12    3     8   \n","1           1     536365     71053  2010     12    3     8   \n","2           2     536365    84406B  2010     12    3     8   \n","3           3     536365    84029G  2010     12    3     8   \n","\n","                           Description  Quantity          InvoiceDate  \\\n","0   white hanging heart t-light holder         6  2010-12-01 08:26:00   \n","1                  white metal lantern         6  2010-12-01 08:26:00   \n","2       cream cupid hearts coat hanger         8  2010-12-01 08:26:00   \n","3  knitted union flag hot water bottle         6  2010-12-01 08:26:00   \n","\n","   UnitPrice  CustomerID         Country  amount_spent  \n","0       2.55       17850  United Kingdom         15.30  \n","1       3.39       17850  United Kingdom         20.34  \n","2       2.75       17850  United Kingdom         22.00  \n","3       3.39       17850  United Kingdom         20.34  "],"text/html":["\n","  <div id=\"df-1f79b7ce-2e6c-4073-a3c2-f1aa83725a3d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>amount_spent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>2010</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>white hanging heart t-light holder</td>\n","      <td>6</td>\n","      <td>2010-12-01 08:26:00</td>\n","      <td>2.55</td>\n","      <td>17850</td>\n","      <td>United Kingdom</td>\n","      <td>15.30</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>2010</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>white metal lantern</td>\n","      <td>6</td>\n","      <td>2010-12-01 08:26:00</td>\n","      <td>3.39</td>\n","      <td>17850</td>\n","      <td>United Kingdom</td>\n","      <td>20.34</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>2010</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>cream cupid hearts coat hanger</td>\n","      <td>8</td>\n","      <td>2010-12-01 08:26:00</td>\n","      <td>2.75</td>\n","      <td>17850</td>\n","      <td>United Kingdom</td>\n","      <td>22.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>2010</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>knitted union flag hot water bottle</td>\n","      <td>6</td>\n","      <td>2010-12-01 08:26:00</td>\n","      <td>3.39</td>\n","      <td>17850</td>\n","      <td>United Kingdom</td>\n","      <td>20.34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f79b7ce-2e6c-4073-a3c2-f1aa83725a3d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1f79b7ce-2e6c-4073-a3c2-f1aa83725a3d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1f79b7ce-2e6c-4073-a3c2-f1aa83725a3d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a65fd055-c25c-45c5-879d-a4b19e506112\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a65fd055-c25c-45c5-879d-a4b19e506112')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a65fd055-c25c-45c5-879d-a4b19e506112 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["snake_columns(df)"],"metadata":{"id":"l3noiws-uzlX","executionInfo":{"status":"ok","timestamp":1721154506470,"user_tz":-120,"elapsed":5,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Qbo3qJ0u3DK","executionInfo":{"status":"ok","timestamp":1721154506976,"user_tz":-120,"elapsed":510,"user":{"displayName":"David Arques","userId":"16424418859302897863"}},"outputId":"98591759-88f9-4971-fef3-13285382ad1f"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 397924 entries, 0 to 397923\n","Data columns (total 14 columns):\n"," #   Column        Non-Null Count   Dtype  \n","---  ------        --------------   -----  \n"," 0   unnamed:_0    397924 non-null  int64  \n"," 1   invoiceno     397924 non-null  int64  \n"," 2   stockcode     397924 non-null  object \n"," 3   year          397924 non-null  int64  \n"," 4   month         397924 non-null  int64  \n"," 5   day           397924 non-null  int64  \n"," 6   hour          397924 non-null  int64  \n"," 7   description   397924 non-null  object \n"," 8   quantity      397924 non-null  int64  \n"," 9   invoicedate   397924 non-null  object \n"," 10  unitprice     397924 non-null  float64\n"," 11  customerid    397924 non-null  int64  \n"," 12  country       397924 non-null  object \n"," 13  amount_spent  397924 non-null  float64\n","dtypes: float64(2), int64(8), object(4)\n","memory usage: 42.5+ MB\n"]}]},{"cell_type":"markdown","metadata":{"id":"pW3sXMNruAR3"},"source":["---\n","\n","\"Identify VIP and Preferred Customers\" is the non-technical goal of your boss. You need to translate that goal into technical languages that data analysts use:\n","\n","## How to label customers whose aggregated `amount_spent` is in a given quantile range?\n"]},{"cell_type":"markdown","metadata":{"id":"kDyWZ8vhuAR3"},"source":["We break down the main problem into several sub problems:\n","\n","#### Sub Problem 1: How to aggregate the  `amount_spent` for unique customers?\n","\n","#### Sub Problem 2: How to select customers whose aggregated `amount_spent` is in a given quantile range?\n","\n","#### Sub Problem 3: How to label selected customers as \"VIP\" or \"Preferred\"?\n","\n","*Note: If you want to break down the main problem in a different way, please feel free to revise the sub problems above.*\n","\n","Now in the workspace below, tackle each of the sub problems using the iterative problem solving workflow. Insert cells as necessary to write your codes and explain your steps."]},{"cell_type":"code","execution_count":9,"metadata":{"id":"H8iMnSa9uAR3","executionInfo":{"status":"ok","timestamp":1721154506977,"user_tz":-120,"elapsed":4,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"outputs":[],"source":["# Sub problem 1:\n","total_spent = df.groupby('customerid')['amount_spent'].sum()"]},{"cell_type":"code","source":["# Sub Problem 2:\n","quantiles = total_spent.quantile([0.75, 0.95])"],"metadata":{"id":"goIW7jQHxnXJ","executionInfo":{"status":"ok","timestamp":1721154506977,"user_tz":-120,"elapsed":3,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# Sub problme 3: Apply filter customers based on quantile ranges\n","vip_customers = total_spent[total_spent > quantiles[0.95]]\n","preferred_customers = total_spent[(total_spent > quantiles[0.75]) & (total_spent <= quantiles[0.95])]"],"metadata":{"id":"0iXA0A2UxvFD","executionInfo":{"status":"ok","timestamp":1721154506977,"user_tz":-120,"elapsed":3,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6NfbPR-VuAR3"},"source":["Now we'll leave it to you to solve Q2 & Q3, which you can leverage from your solution for Q1:\n","\n","## Q2: How to identify which country has the most VIP Customers?"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"cYTTNZ1uuAR3","executionInfo":{"status":"ok","timestamp":1721154506977,"user_tz":-120,"elapsed":3,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"outputs":[],"source":["# Data frame for VIP customers:\n","vip_customers_df = pd.DataFrame(vip_customers).reset_index()\n","# Add country data:\n","vip_customers_country = pd.merge(vip_customers_df, df[['customerid', 'country']], on='customerid')"]},{"cell_type":"code","source":["vip_customers_country['country'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1MiRnGjMzZgz","executionInfo":{"status":"ok","timestamp":1721154553268,"user_tz":-120,"elapsed":1115,"user":{"displayName":"David Arques","userId":"16424418859302897863"}},"outputId":"17c24690-b59d-414c-f20e-7227c0a0a1f7"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["country\n","United Kingdom     84185\n","EIRE                7077\n","France              3290\n","Germany             3127\n","Netherlands         2080\n","Australia            898\n","Portugal             681\n","Switzerland          594\n","Spain                511\n","Norway               420\n","Channel Islands      364\n","Finland              294\n","Cyprus               248\n","Singapore            222\n","Japan                205\n","Sweden               198\n","Belgium               54\n","Denmark               36\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["**Answer**: UK is the country with more VIP customers"],"metadata":{"id":"RlLob5SSzpeG"}},{"cell_type":"markdown","metadata":{"id":"eCxKm92juAR4"},"source":["## Q3: How to identify which country has the most VIP+Preferred Customers combined?"]},{"cell_type":"code","source":["# Step 2: Merge with the original DataFrame to get country information\n","vip_customers_df = pd.DataFrame(vip_customers).reset_index()\n","preferred_customers_df = pd.DataFrame(preferred_customers).reset_index()\n","\n","vip_preferred_customers = pd.merge(pd.concat([vip_customers_df, preferred_customers_df]), df[['customerid', 'country']], on='customerid')"],"metadata":{"id":"XK5QAVtR0Gxm","executionInfo":{"status":"ok","timestamp":1721154919099,"user_tz":-120,"elapsed":404,"user":{"displayName":"David Arques","userId":"16424418859302897863"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["vip_preferred_customers['country'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fZsGAkkV0-GR","executionInfo":{"status":"ok","timestamp":1721154984359,"user_tz":-120,"elapsed":3,"user":{"displayName":"David Arques","userId":"16424418859302897863"}},"outputId":"266e41ed-8022-4381-911b-53910b408245"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["country\n","United Kingdom     221635\n","Germany              7349\n","EIRE                 7238\n","France               6301\n","Netherlands          2080\n","Spain                1569\n","Belgium              1557\n","Switzerland          1370\n","Portugal             1093\n","Australia            1028\n","Norway               1028\n","Channel Islands       589\n","Italy                 507\n","Finland               504\n","Cyprus                451\n","Sweden                273\n","Japan                 272\n","Singapore             222\n","Denmark               217\n","Israel                214\n","Iceland               182\n","Austria               158\n","Poland                149\n","Canada                135\n","Malta                  67\n","Lebanon                45\n","Greece                 32\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# UK is again the top country combining VIP + Preferred customers"],"metadata":{"id":"1iMogJAk1O9a"},"execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}